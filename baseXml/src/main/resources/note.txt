IOC操作Bean管理
    1 什么是Bean管理：两个操作，分别是
        1 Spring创建对象
        2 Spring注入属性
    2 Bean管理操作有两种方式
        1 配置文件方式
        2 基于注解方式
    3 基于xml方式创建对象：
        1 在spring配置文件中，使用bean标签，标签里面添加对应的属性，就可以实现对象创建
        2 在bean标签中有很多的属性，介绍常用的属性
            *id属性：给对象起一个名字，作为对象的唯一标识
            *class属性：类全路径（包类路径）
            *name属性：和id一样，但是可以加特殊符号，现在已经很少用了
        3 创建对象的时候，默认也是执行无参构造方法。
    4 基于xml方式注入属性
        1 DI：依赖注入，就是注入依赖
            1 使用set方法注入属性
                1 创建类，定义属性和set方法
                2 在spring配置文件中，配置对象创建，配置属性注入
            2 使用有参构造方法注入
                1 创建类，定义属性，创建有参构造防范
                2 在配置文件中进行配置
    5 p名称空间注入
        1 使用p名称空间注入，简化基于xml配置的方式
        2 进行属性的注入
    IOC操作Bean管理（xml注入其他类型属性）
    1 字面量
        null值：
        设置属性值包含特殊符号：
    2 注入属性-外部bean
        1 创建两个类service和dao类
        2 在service中调用dao里面的方法
        3 在配置文件中配置
    3 注入属性-外部bean和级联赋值
        1 一对多关系：部门和员工：一个部门有多个员工，一个员工属于一个部门，部门是一，员工是多. 员工属于一个部门，则员工的一个属性就是部门
    4 级联赋值
        外部bean形式可以实现级联赋值

    6 IOC操作bean管理（xml注入集合属性）
        1 注入数组类型属性

        2 注入List集合类型属性

        3 注入map集合类型

        （1）创建类，定义属性
        （2）配置文件中进行配置
    细节：
        1 List中放一个对象应该怎么办
            在集合中设置对象类型的值
        2 在所有对象中都使用集合，抽取出公共部分
            1 先引入名称空间
            2 使用util标签，完成提取与注入

IOC操作Bean管理（FactoryBean）
    1 Spring中有两种bean，一种普通bean，一种是FactoryBean
        普通bean：定义的类型就是返回的类型
        工厂bean：定义的类型和返回的结果可以是不一样的
            第一步：创建类，让这个类作为工厂bean，实现接口FactoryBean
            第二部：实现接口里面的方法，在实现的方法中返回bean类型
    2 bean的作用域
        1 spring中能设置创建的bean是单实例还是多实例
        2 默认情况下创建的bean是单实例对象
        3 如何设置单实例还是多实例：属性：scope
            1 scope：singleton，单实例，加载的时候就创建单实例对象
            2 scope：prototype，多实例，不是在加载的时候创建对象，在调用getBean方法的时候创建一个新的对象
            3 scope：request
            4 scope：session
    3 bean的生命周期
        1 生命周期：从对象的创建到销毁的过程
            （1）创建bean实例，使用构造器（无参）
            （2）为bean的属性设置值和对其他bean的饮用（set方法）
            （3）调用bean的初始化的方法（需要进行配置）
            （4）bean可以使用（对象获取到）
            （5）容器关闭的时候，调用bean的销毁方法（需要进行配置）
        2 演示bean的生命周期
        3 bean的生命周期还有两步，被叫做后置处理
            第三步的前后还有两个步骤，实际上bean的生命周期一共有七步
            3前：把bean实例传递给bean的后置处理器的方法
            3后：把bean实例传递给bean的后置处理器的方法
            也就是：
                （1）创建bean实例，使用构造器（无参）
                （2）为bean的属性设置值和对其他bean的饮用（set方法）
                （2.5）把bean实例传递给bean的后置处理器的方法:postProcessBeforeInitialization
                （3）调用bean的初始化的方法（需要进行配置）
                （3.5）把bean实例传递给bean的后置处理器的方法:postProcessAfterInitialization
                （4）bean可以使用（对象获取到）
                （5）容器关闭的时候，调用bean的销毁方法（需要进行配置）
        4 演示后置处理器
            （1）创建类，实现接口BeanPostProcessor，创建后置处理器

IOC操作bean管理（xml自动装配）
    1 什么是自动装配
        （1）根据指定装配规则（属性名称或者属性类型），spring自动将匹配的属性进行注入
    2 演示根据属性自动装配(autowire属性)
        （1）byName
        （2）byType：根据类型如果有多个的话，spring就不知道装配哪一个了。

IOC操作bean管理（外部属性管理）
    1 直接配置数据库信息
        （1）配置连接池
        （2）引入德鲁伊连接池的依赖jar包

    2 引入外部配置属性文件配置数据库连接池
        （1）创建外部属性文件，properties格式文件，写数据库信息
        （2）在spring的配置文件中使用标签引入外部属性文件



